・バリデーション　データを保存するときにデータのチェックを行うことができる
・プロトコル　通信するときの約束事
・web(オープン、不特定)←→rpc(分散システム技術の一つ、クローズド)
・インターフェース　コンピュータと人間の接点、機器の間を繋いで更新や制御を可能にするもの
・HTML ホームページのファイルの書き方ルール
・HTTP 通信プロトコル　ホームページのファイルをやり取りするときに使う約束事
・トランザクション　ここからここまでがワンセット、な処理のまとまり
・ベンダー　メーカー、売り手
・REST　webの設計モデル。（Representational State Transfer）
「ネットワーク上に置かれたリソース（データ）に対して表示、作成、更新、削除などの操作を行う」というアプリケーション作成における考え方

・コンポーネント　部品
・プロキシ　ブラウザのパシリ。代わりにHPにアクセスするサーバ
・ブラウザ←→プロキシ←→サーバ　プロキシのメリット　身元を隠せる、キャッシュがあればサーバまで取りに行かなくてもブラウザに表示できる
・webブラウザ　HPをみるときに使うソフト
・サーバ　サービスを提供するPC。キーボードも画面もないPC
・キャッシュ　よく使うデータを準備しておく
・リソース　web上の名前のある全ての情報
・URL（宛先）＞URL（住所）、URN（名前）
・スクリプト　プログラムのこと。コードを書いてすぐに動かせる。コンパイルはPCがやってくれる
・コンパイル　人間語→機械語への変換作業
・クッキー　サーバからブラウザに、「次はこれ持ってきて」と渡されるメモ。メモは有効期間あり、盗み見される。
・ドメイン名（人間向け）　IPアドレス（住所）につけた人間向けの名前
・IPアドレス（機械向け）　コンピュータに割り当てられる住所
・DNSシステム　ドメインとIPアドレスをやり取りする
・Unix　昔のOSのこと。OSは他にもWindows、Mac、iOS、Android、Linuxなどある
・Linux　フリーソフト、UNIXと互換性あり
・クエリ　データベースに対する命令文か、検索キーワードのこと
・リファクタリング　 プログラムの動きは変えないまま、ソースコードを書き換えること
・関数　何かを入れると何かをして、何かを返してくれるプログラムの部品。何らかの処理をまとめたもの。入力に対して処理を行い、出力を返すもの。
・引数→関数→戻り値
・オブジェクト=もの　クラス（設計図）とかインスタンス（実際に作ったもの）とか「もの」のこと。
・「もの」は①属性（どんなやつ）　②操作（どう動く）で表される
・操作（どう動く）を定義したのがメソッド
・メソッド（合コン）＜関数（飲み会）

・クラスは概念→スマホ（属性とメソッドを定義）
・インスタンスは物体→iPhone（クラスをnewしたもの）
・オブジェクト→上記をふんわりと表現したもの→ケータイ（クラスでもありインスタンスでもある）

